#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Mod√®le d'IA simplifi√© pour tester l'interface de chat
"""

import time
import logging

logger = logging.getLogger("VynalDocsAutomator.TestModel")

class AIModel:
    """Version simplifi√©e du mod√®le AI pour les tests"""
    
    def __init__(self):
        """Initialise le mod√®le d'IA factice"""
        # Initialiser le logger
        self.logger = logging.getLogger("VynalDocsAutomator.TestModel")
        self.logger.info("Initialisation du mod√®le d'IA de test")
        
        # Initialiser la conversation
        self.conversation_history = []
        
        # Initialiser les √©tats
        self.current_context = {
            "state": "initial",      # √âtat initial de la conversation
            "last_action": None,     # Derni√®re action effectu√©e
            "subject": None,         # Sujet de la conversation
            "details": {}            # D√©tails pour le traitement
        }
    
    def generate_response(self, message):
        """
        G√©n√®re une r√©ponse simul√©e
        
        Args:
            message (str): Le message de l'utilisateur
            
        Returns:
            str: La r√©ponse g√©n√©r√©e
        """
        # Simulation d'un d√©lai de traitement
        time.sleep(1)
        
        # Logging
        self.logger.info(f"Message re√ßu: {message}")
        
        # Traitement simple bas√© sur le contenu du message
        lower_message = message.lower()
        
        # Mise √† jour de l'√©tat selon le contenu du message
        if "document" in lower_message or "doc" in lower_message:
            if "cr√©er" in lower_message or "creer" in lower_message or "nouveau" in lower_message:
                self.current_context["state"] = "asking_document_type"
                self.current_context["last_action"] = "demande_document"
                return """üìå Que souhaitez-vous faire ?

1Ô∏è‚É£ Utiliser un mod√®le existant
2Ô∏è‚É£ Cr√©er un nouveau document

Veuillez choisir une option en tapant 1 ou 2."""
            
            elif "mod√®le" in lower_message or "modele" in lower_message or "template" in lower_message:
                self.current_context["state"] = "choosing_category"
                self.current_context["last_action"] = "demande_modele"
                return """üìã Voici les cat√©gories de mod√®les disponibles:

1. Contrats
2. Factures
3. Lettres
4. Rapports

Veuillez choisir une cat√©gorie en tapant son num√©ro."""

        # R√©ponses selon l'√©tat actuel
        if self.current_context["state"] == "asking_document_type":
            if message == "1":
                self.current_context["state"] = "choosing_category"
                return """üìã Voici les cat√©gories de mod√®les disponibles:

1. Contrats
2. Factures
3. Lettres
4. Rapports

Veuillez choisir une cat√©gorie en tapant son num√©ro."""
            elif message == "2":
                self.current_context["state"] = "new_document"
                return "üìù Veuillez d√©crire le type de document que vous souhaitez cr√©er."
        
        elif self.current_context["state"] == "choosing_category":
            self.current_context["state"] = "choosing_model"
            return """üìÑ Voici les mod√®les disponibles dans cette cat√©gorie:

1. Mod√®le standard
2. Mod√®le premium
3. Mod√®le personnalis√©

Veuillez choisir un mod√®le en tapant son num√©ro."""
        
        elif self.current_context["state"] == "choosing_model":
            self.current_context["state"] = "filling_model"
            return "‚úÖ Excellent choix! Je vais maintenant vous guider pour remplir ce mod√®le. Quel est votre nom complet?"
        
        elif self.current_context["state"] == "filling_model":
            self.current_context["details"]["nom"] = message
            self.current_context["state"] = "document_ready"
            return f"‚úÖ Merci {message}! Votre document est pr√™t. Vous pouvez le t√©l√©charger en cliquant sur le bouton ci-dessous."
        
        elif self.current_context["state"] == "new_document":
            self.current_context["details"]["type"] = message
            self.current_context["state"] = "document_ready"
            return f"‚úÖ J'ai cr√©√© un nouveau document de type '{message}'. Vous pouvez le t√©l√©charger en cliquant sur le bouton ci-dessous."
        
        # R√©ponse par d√©faut
        return "Comment puis-je vous aider avec vos documents aujourd'hui?" 